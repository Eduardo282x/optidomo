// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  id         String       @id @default(cuid())
  name       String
  devices    AreaDevice[]
  energyLogs EnergyLog[]
  accessLogs AccessLog[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

enum DeviceType {
  LIGHT
  AC
}

model Device {
  id          String       @id @default(cuid())
  name        String
  type        DeviceType
  powerWatts  Float // Consumo en watts por hora
  areaDevices AreaDevice[]
  energyLogs  EnergyLog[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model AreaDevice {
  id       String @id @default(cuid())
  area     Area   @relation(fields: [areaId], references: [id])
  areaId   String
  device   Device @relation(fields: [deviceId], references: [id])
  deviceId String
}

model EnergyLog {
  id        String    @id @default(cuid())
  device    Device    @relation(fields: [deviceId], references: [id])
  deviceId  String
  area      Area      @relation(fields: [areaId], references: [id])
  areaId    String
  startedAt DateTime
  endedAt   DateTime? // null mientras est√© encendido
  totalWh   Float? // Consumo en Wh (calculado al apagarse)
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model User {
  id         String      @id @default(cuid())
  fullName   String
  email      String      @unique
  password   String
  role       Role
  accessLogs AccessLog[]
  isPaid     Boolean     @default(true) // Para simular pagos
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum AccessType {
  ENTRY
  EXIT
}

model AccessLog {
  id        String     @id @default(cuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  area      Area       @relation(fields: [areaId], references: [id])
  areaId    String
  type      AccessType
  timestamp DateTime
}
